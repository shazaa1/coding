# -*- coding: utf-8 -*-
"""seccion 4 ai.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WB2bBtVwmL3VTWddJw7gFhqdNIdO6q8D
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split,cross_val_score
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.tree import plot_tree
from sklearn import metrics
from sklearn.metrics import f1_score,confusion_matrix, precision_score, recall_score

data=pd.read_csv("/content/data ss.csv")
data

data.head()

data.info()

data.describe()

data['diagnosis'].value_counts()

data.isnull().sum()

print(data.duplicated().sum())

data['diagnosis'] = data['diagnosis'].map({'M': 1, 'B': 0})
data

plt.figure(figsize=(20,20))
sns.heatmap(data.corr(),annot=True,cmap='rainbow',linewidth=0.5,fmt='.2f')
plt.show()

print(y_train.isnull().sum())

X = data.drop(columns=["diagnosis", "id"])
y = data["diagnosis"]

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=25)

scaler=StandardScaler()
x_train_scaled=scaler.fit_transform(X_train)
x_test_scaled=scaler.transform(X_test)

logreg=LogisticRegression(multi_class='auto', random_state=25, n_jobs=-1)
print(logreg.fit(X_train,y_train))

log_pred=logreg.predict(X_test)
logreg_cv=cross_val_score(logreg, X_train, y_train, cv=10).mean()

print('Accuracy: %.3f' % logreg.score(X_test, y_test))
print('Cross-validation accuracy: %0.3f' % logreg_cv)
print('Precision: %.3f' % precision_score(y_test, log_pred))
print('Recall: %.3f' % recall_score(y_test, log_pred))
print('F1 score: %.3f' % f1_score(y_test, log_pred))

from sklearn.tree import DecisionTreeClassifier, plot_tree
import matplotlib.pyplot as plt

tr = DecisionTreeClassifier(random_state=42)
tr.fit(X_train, y_train)


fig = plt.figure(figsize=(20,20))
plot_tree(tr, feature_names=X.columns, filled=True, rounded=True, fontsize=16)
plt.title('Decision Tree')
plt.show()